// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: grpc/cwm-rq-res-thread.proto

package grpcCWMPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// -------------------CREATE GROUP THREAD--------------------------------//
type CreateGroupThreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName    string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Participants []string `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *CreateGroupThreadRequest) Reset() {
	*x = CreateGroupThreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupThreadRequest) ProtoMessage() {}

func (x *CreateGroupThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupThreadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupThreadRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateGroupThreadRequest) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

type CreateGroupThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *CreateGroupThreadResponse) Reset() {
	*x = CreateGroupThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupThreadResponse) ProtoMessage() {}

func (x *CreateGroupThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupThreadResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupThreadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupThreadResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------CHECK GROUP THREAD INFO--------------------------------//
type CheckGroupThreadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
}

func (x *CheckGroupThreadInfoRequest) Reset() {
	*x = CheckGroupThreadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGroupThreadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGroupThreadInfoRequest) ProtoMessage() {}

func (x *CheckGroupThreadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGroupThreadInfoRequest.ProtoReflect.Descriptor instead.
func (*CheckGroupThreadInfoRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{2}
}

func (x *CheckGroupThreadInfoRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type CheckGroupThreadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *CheckGroupThreadInfoResponse) Reset() {
	*x = CheckGroupThreadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGroupThreadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGroupThreadInfoResponse) ProtoMessage() {}

func (x *CheckGroupThreadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGroupThreadInfoResponse.ProtoReflect.Descriptor instead.
func (*CheckGroupThreadInfoResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{3}
}

func (x *CheckGroupThreadInfoResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------CHANGE GROUP THREAD NAME--------------------------------//
type ChangeGroupThreadNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId  string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *ChangeGroupThreadNameRequest) Reset() {
	*x = ChangeGroupThreadNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeGroupThreadNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeGroupThreadNameRequest) ProtoMessage() {}

func (x *ChangeGroupThreadNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeGroupThreadNameRequest.ProtoReflect.Descriptor instead.
func (*ChangeGroupThreadNameRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeGroupThreadNameRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *ChangeGroupThreadNameRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type ChangeGroupThreadNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *ChangeGroupThreadNameResponse) Reset() {
	*x = ChangeGroupThreadNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeGroupThreadNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeGroupThreadNameResponse) ProtoMessage() {}

func (x *ChangeGroupThreadNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeGroupThreadNameResponse.ProtoReflect.Descriptor instead.
func (*ChangeGroupThreadNameResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeGroupThreadNameResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------ADD GROUP THREAD PARTICIPANT--------------------------------//
type AddGroupThreadParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId        string   `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	NewParticipants []string `protobuf:"bytes,2,rep,name=newParticipants,proto3" json:"newParticipants,omitempty"`
}

func (x *AddGroupThreadParticipantRequest) Reset() {
	*x = AddGroupThreadParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupThreadParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupThreadParticipantRequest) ProtoMessage() {}

func (x *AddGroupThreadParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupThreadParticipantRequest.ProtoReflect.Descriptor instead.
func (*AddGroupThreadParticipantRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{6}
}

func (x *AddGroupThreadParticipantRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *AddGroupThreadParticipantRequest) GetNewParticipants() []string {
	if x != nil {
		return x.NewParticipants
	}
	return nil
}

type AddGroupThreadParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *AddGroupThreadParticipantResponse) Reset() {
	*x = AddGroupThreadParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupThreadParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupThreadParticipantResponse) ProtoMessage() {}

func (x *AddGroupThreadParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupThreadParticipantResponse.ProtoReflect.Descriptor instead.
func (*AddGroupThreadParticipantResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{7}
}

func (x *AddGroupThreadParticipantResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------REMOVE GROUP THREAD PARTICIPANT--------------------------------//
type RemoveGroupThreadParticipantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId           string   `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	RemoveParticipants []string `protobuf:"bytes,2,rep,name=removeParticipants,proto3" json:"removeParticipants,omitempty"`
}

func (x *RemoveGroupThreadParticipantRequest) Reset() {
	*x = RemoveGroupThreadParticipantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupThreadParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupThreadParticipantRequest) ProtoMessage() {}

func (x *RemoveGroupThreadParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupThreadParticipantRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupThreadParticipantRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveGroupThreadParticipantRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RemoveGroupThreadParticipantRequest) GetRemoveParticipants() []string {
	if x != nil {
		return x.RemoveParticipants
	}
	return nil
}

type RemoveGroupThreadParticipantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *RemoveGroupThreadParticipantResponse) Reset() {
	*x = RemoveGroupThreadParticipantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupThreadParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupThreadParticipantResponse) ProtoMessage() {}

func (x *RemoveGroupThreadParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupThreadParticipantResponse.ProtoReflect.Descriptor instead.
func (*RemoveGroupThreadParticipantResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveGroupThreadParticipantResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------PROMOTE GROUP THREAD ADMIN--------------------------------//
type PromoteGroupThreadAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId  string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	PhoneFull string `protobuf:"bytes,2,opt,name=phoneFull,proto3" json:"phoneFull,omitempty"`
}

func (x *PromoteGroupThreadAdminRequest) Reset() {
	*x = PromoteGroupThreadAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteGroupThreadAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteGroupThreadAdminRequest) ProtoMessage() {}

func (x *PromoteGroupThreadAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteGroupThreadAdminRequest.ProtoReflect.Descriptor instead.
func (*PromoteGroupThreadAdminRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{10}
}

func (x *PromoteGroupThreadAdminRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *PromoteGroupThreadAdminRequest) GetPhoneFull() string {
	if x != nil {
		return x.PhoneFull
	}
	return ""
}

type PromoteGroupThreadAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *PromoteGroupThreadAdminResponse) Reset() {
	*x = PromoteGroupThreadAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteGroupThreadAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteGroupThreadAdminResponse) ProtoMessage() {}

func (x *PromoteGroupThreadAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteGroupThreadAdminResponse.ProtoReflect.Descriptor instead.
func (*PromoteGroupThreadAdminResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{11}
}

func (x *PromoteGroupThreadAdminResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------REVOKE GROUP THREAD ADMIN--------------------------------//
type RevokeGroupThreadAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId  string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	PhoneFull string `protobuf:"bytes,2,opt,name=phoneFull,proto3" json:"phoneFull,omitempty"`
}

func (x *RevokeGroupThreadAdminRequest) Reset() {
	*x = RevokeGroupThreadAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeGroupThreadAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeGroupThreadAdminRequest) ProtoMessage() {}

func (x *RevokeGroupThreadAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeGroupThreadAdminRequest.ProtoReflect.Descriptor instead.
func (*RevokeGroupThreadAdminRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{12}
}

func (x *RevokeGroupThreadAdminRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RevokeGroupThreadAdminRequest) GetPhoneFull() string {
	if x != nil {
		return x.PhoneFull
	}
	return ""
}

type RevokeGroupThreadAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *RevokeGroupThreadAdminResponse) Reset() {
	*x = RevokeGroupThreadAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeGroupThreadAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeGroupThreadAdminResponse) ProtoMessage() {}

func (x *RevokeGroupThreadAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeGroupThreadAdminResponse.ProtoReflect.Descriptor instead.
func (*RevokeGroupThreadAdminResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{13}
}

func (x *RevokeGroupThreadAdminResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------LEAVE GROUP THREAD--------------------------------//
type LeaveGroupThreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
}

func (x *LeaveGroupThreadRequest) Reset() {
	*x = LeaveGroupThreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupThreadRequest) ProtoMessage() {}

func (x *LeaveGroupThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupThreadRequest.ProtoReflect.Descriptor instead.
func (*LeaveGroupThreadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveGroupThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type LeaveGroupThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *LeaveGroupThreadResponse) Reset() {
	*x = LeaveGroupThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupThreadResponse) ProtoMessage() {}

func (x *LeaveGroupThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupThreadResponse.ProtoReflect.Descriptor instead.
func (*LeaveGroupThreadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{15}
}

func (x *LeaveGroupThreadResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

// -------------------DELETE AND LEAVE GROUP THREAD--------------------------------//
type DeleteAndLeaveGroupThreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
}

func (x *DeleteAndLeaveGroupThreadRequest) Reset() {
	*x = DeleteAndLeaveGroupThreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAndLeaveGroupThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAndLeaveGroupThreadRequest) ProtoMessage() {}

func (x *DeleteAndLeaveGroupThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAndLeaveGroupThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteAndLeaveGroupThreadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteAndLeaveGroupThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type DeleteAndLeaveGroupThreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupThreadInfo *GroupThreadInfo `protobuf:"bytes,1,opt,name=groupThreadInfo,proto3" json:"groupThreadInfo,omitempty"`
}

func (x *DeleteAndLeaveGroupThreadResponse) Reset() {
	*x = DeleteAndLeaveGroupThreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAndLeaveGroupThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAndLeaveGroupThreadResponse) ProtoMessage() {}

func (x *DeleteAndLeaveGroupThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cwm_rq_res_thread_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAndLeaveGroupThreadResponse.ProtoReflect.Descriptor instead.
func (*DeleteAndLeaveGroupThreadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cwm_rq_res_thread_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteAndLeaveGroupThreadResponse) GetGroupThreadInfo() *GroupThreadInfo {
	if x != nil {
		return x.GroupThreadInfo
	}
	return nil
}

var File_grpc_cwm_rq_res_thread_proto protoreflect.FileDescriptor

var file_grpc_cwm_rq_res_thread_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x77, 0x6d, 0x2d, 0x72, 0x71, 0x2d, 0x72, 0x65,
	0x73, 0x2d, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x1a, 0x14, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x63, 0x77, 0x6d, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x61, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x39, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x58, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1d, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x68, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x21,
	0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71, 0x0a, 0x23, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x24, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x46,
	0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x22, 0x67, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a,
	0x1d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x22, 0x66, 0x0a, 0x1e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x35, 0x0a, 0x17, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x18, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x43, 0x57, 0x4d, 0x50, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x20, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x21, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57,
	0x4d, 0x50, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x1c, 0x5a, 0x1a, 0x73, 0x6f, 0x6c, 0x2e, 0x67, 0x6f, 0x2f, 0x63,
	0x77, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x43, 0x57, 0x4d,
	0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_cwm_rq_res_thread_proto_rawDescOnce sync.Once
	file_grpc_cwm_rq_res_thread_proto_rawDescData = file_grpc_cwm_rq_res_thread_proto_rawDesc
)

func file_grpc_cwm_rq_res_thread_proto_rawDescGZIP() []byte {
	file_grpc_cwm_rq_res_thread_proto_rawDescOnce.Do(func() {
		file_grpc_cwm_rq_res_thread_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_cwm_rq_res_thread_proto_rawDescData)
	})
	return file_grpc_cwm_rq_res_thread_proto_rawDescData
}

var file_grpc_cwm_rq_res_thread_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_grpc_cwm_rq_res_thread_proto_goTypes = []interface{}{
	(*CreateGroupThreadRequest)(nil),             // 0: grpcCWMPb.CreateGroupThreadRequest
	(*CreateGroupThreadResponse)(nil),            // 1: grpcCWMPb.CreateGroupThreadResponse
	(*CheckGroupThreadInfoRequest)(nil),          // 2: grpcCWMPb.CheckGroupThreadInfoRequest
	(*CheckGroupThreadInfoResponse)(nil),         // 3: grpcCWMPb.CheckGroupThreadInfoResponse
	(*ChangeGroupThreadNameRequest)(nil),         // 4: grpcCWMPb.ChangeGroupThreadNameRequest
	(*ChangeGroupThreadNameResponse)(nil),        // 5: grpcCWMPb.ChangeGroupThreadNameResponse
	(*AddGroupThreadParticipantRequest)(nil),     // 6: grpcCWMPb.AddGroupThreadParticipantRequest
	(*AddGroupThreadParticipantResponse)(nil),    // 7: grpcCWMPb.AddGroupThreadParticipantResponse
	(*RemoveGroupThreadParticipantRequest)(nil),  // 8: grpcCWMPb.RemoveGroupThreadParticipantRequest
	(*RemoveGroupThreadParticipantResponse)(nil), // 9: grpcCWMPb.RemoveGroupThreadParticipantResponse
	(*PromoteGroupThreadAdminRequest)(nil),       // 10: grpcCWMPb.PromoteGroupThreadAdminRequest
	(*PromoteGroupThreadAdminResponse)(nil),      // 11: grpcCWMPb.PromoteGroupThreadAdminResponse
	(*RevokeGroupThreadAdminRequest)(nil),        // 12: grpcCWMPb.RevokeGroupThreadAdminRequest
	(*RevokeGroupThreadAdminResponse)(nil),       // 13: grpcCWMPb.RevokeGroupThreadAdminResponse
	(*LeaveGroupThreadRequest)(nil),              // 14: grpcCWMPb.LeaveGroupThreadRequest
	(*LeaveGroupThreadResponse)(nil),             // 15: grpcCWMPb.LeaveGroupThreadResponse
	(*DeleteAndLeaveGroupThreadRequest)(nil),     // 16: grpcCWMPb.DeleteAndLeaveGroupThreadRequest
	(*DeleteAndLeaveGroupThreadResponse)(nil),    // 17: grpcCWMPb.DeleteAndLeaveGroupThreadResponse
	(*GroupThreadInfo)(nil),                      // 18: grpcCWMPb.GroupThreadInfo
}
var file_grpc_cwm_rq_res_thread_proto_depIdxs = []int32{
	18, // 0: grpcCWMPb.CreateGroupThreadResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 1: grpcCWMPb.CheckGroupThreadInfoResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 2: grpcCWMPb.ChangeGroupThreadNameResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 3: grpcCWMPb.AddGroupThreadParticipantResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 4: grpcCWMPb.RemoveGroupThreadParticipantResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 5: grpcCWMPb.PromoteGroupThreadAdminResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 6: grpcCWMPb.RevokeGroupThreadAdminResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 7: grpcCWMPb.LeaveGroupThreadResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	18, // 8: grpcCWMPb.DeleteAndLeaveGroupThreadResponse.groupThreadInfo:type_name -> grpcCWMPb.GroupThreadInfo
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_grpc_cwm_rq_res_thread_proto_init() }
func file_grpc_cwm_rq_res_thread_proto_init() {
	if File_grpc_cwm_rq_res_thread_proto != nil {
		return
	}
	file_grpc_cwm_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_cwm_rq_res_thread_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupThreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGroupThreadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGroupThreadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeGroupThreadNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeGroupThreadNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupThreadParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupThreadParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupThreadParticipantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupThreadParticipantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteGroupThreadAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoteGroupThreadAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeGroupThreadAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeGroupThreadAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupThreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAndLeaveGroupThreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cwm_rq_res_thread_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAndLeaveGroupThreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_cwm_rq_res_thread_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_grpc_cwm_rq_res_thread_proto_goTypes,
		DependencyIndexes: file_grpc_cwm_rq_res_thread_proto_depIdxs,
		MessageInfos:      file_grpc_cwm_rq_res_thread_proto_msgTypes,
	}.Build()
	File_grpc_cwm_rq_res_thread_proto = out.File
	file_grpc_cwm_rq_res_thread_proto_rawDesc = nil
	file_grpc_cwm_rq_res_thread_proto_goTypes = nil
	file_grpc_cwm_rq_res_thread_proto_depIdxs = nil
}
