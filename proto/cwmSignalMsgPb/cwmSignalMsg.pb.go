// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: cwm/cwmSignalMsg.proto

package cwmSignalMsgPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SIGNAL_THREAD_TYPE int32

const (
	SIGNAL_THREAD_TYPE_SOLO  SIGNAL_THREAD_TYPE = 0
	SIGNAL_THREAD_TYPE_GROUP SIGNAL_THREAD_TYPE = 1
)

// Enum value maps for SIGNAL_THREAD_TYPE.
var (
	SIGNAL_THREAD_TYPE_name = map[int32]string{
		0: "SOLO",
		1: "GROUP",
	}
	SIGNAL_THREAD_TYPE_value = map[string]int32{
		"SOLO":  0,
		"GROUP": 1,
	}
)

func (x SIGNAL_THREAD_TYPE) Enum() *SIGNAL_THREAD_TYPE {
	p := new(SIGNAL_THREAD_TYPE)
	*p = x
	return p
}

func (x SIGNAL_THREAD_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_THREAD_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[0].Descriptor()
}

func (SIGNAL_THREAD_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[0]
}

func (x SIGNAL_THREAD_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_THREAD_TYPE.Descriptor instead.
func (SIGNAL_THREAD_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{0}
}

type SIGNAL_IM_TYPE int32

const (
	SIGNAL_IM_TYPE_TYPING                    SIGNAL_IM_TYPE = 0
	SIGNAL_IM_TYPE_SEENSTATE                 SIGNAL_IM_TYPE = 1
	SIGNAL_IM_TYPE_EVENT                     SIGNAL_IM_TYPE = 2
	SIGNAL_IM_TYPE_GROUP_THREAD_NOTIFICATION SIGNAL_IM_TYPE = 3
	SIGNAL_IM_TYPE_IM                        SIGNAL_IM_TYPE = 4
	SIGNAL_IM_TYPE_CONTACT                   SIGNAL_IM_TYPE = 5
	SIGNAL_IM_TYPE_EMOTICON                  SIGNAL_IM_TYPE = 6
	SIGNAL_IM_TYPE_URL                       SIGNAL_IM_TYPE = 7
	SIGNAL_IM_TYPE_MULTIMEDIA                SIGNAL_IM_TYPE = 8
	SIGNAL_IM_TYPE_FORWARD                   SIGNAL_IM_TYPE = 9
)

// Enum value maps for SIGNAL_IM_TYPE.
var (
	SIGNAL_IM_TYPE_name = map[int32]string{
		0: "TYPING",
		1: "SEENSTATE",
		2: "EVENT",
		3: "GROUP_THREAD_NOTIFICATION",
		4: "IM",
		5: "CONTACT",
		6: "EMOTICON",
		7: "URL",
		8: "MULTIMEDIA",
		9: "FORWARD",
	}
	SIGNAL_IM_TYPE_value = map[string]int32{
		"TYPING":                    0,
		"SEENSTATE":                 1,
		"EVENT":                     2,
		"GROUP_THREAD_NOTIFICATION": 3,
		"IM":                        4,
		"CONTACT":                   5,
		"EMOTICON":                  6,
		"URL":                       7,
		"MULTIMEDIA":                8,
		"FORWARD":                   9,
	}
)

func (x SIGNAL_IM_TYPE) Enum() *SIGNAL_IM_TYPE {
	p := new(SIGNAL_IM_TYPE)
	*p = x
	return p
}

func (x SIGNAL_IM_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_IM_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[1].Descriptor()
}

func (SIGNAL_IM_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[1]
}

func (x SIGNAL_IM_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_IM_TYPE.Descriptor instead.
func (SIGNAL_IM_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{1}
}

// -------------------SIGNAL_TYPING_MSG--------------------------------//
type SIGNAL_TYPING_MSG_TYPE int32

const (
	SIGNAL_TYPING_MSG_TYPE_M_TYPING   SIGNAL_TYPING_MSG_TYPE = 0
	SIGNAL_TYPING_MSG_TYPE_M_UNTYPING SIGNAL_TYPING_MSG_TYPE = 1
)

// Enum value maps for SIGNAL_TYPING_MSG_TYPE.
var (
	SIGNAL_TYPING_MSG_TYPE_name = map[int32]string{
		0: "M_TYPING",
		1: "M_UNTYPING",
	}
	SIGNAL_TYPING_MSG_TYPE_value = map[string]int32{
		"M_TYPING":   0,
		"M_UNTYPING": 1,
	}
)

func (x SIGNAL_TYPING_MSG_TYPE) Enum() *SIGNAL_TYPING_MSG_TYPE {
	p := new(SIGNAL_TYPING_MSG_TYPE)
	*p = x
	return p
}

func (x SIGNAL_TYPING_MSG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_TYPING_MSG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[2].Descriptor()
}

func (SIGNAL_TYPING_MSG_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[2]
}

func (x SIGNAL_TYPING_MSG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_TYPING_MSG_TYPE.Descriptor instead.
func (SIGNAL_TYPING_MSG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{2}
}

// -------------------SIGNAL_MULTIMEDIA_MSG--------------------------------//
type SIGNAL_MEDIA_TYPE int32

const (
	SIGNAL_MEDIA_TYPE_VIDEO SIGNAL_MEDIA_TYPE = 0
	SIGNAL_MEDIA_TYPE_AUDIO SIGNAL_MEDIA_TYPE = 1
	SIGNAL_MEDIA_TYPE_IMAGE SIGNAL_MEDIA_TYPE = 2
	SIGNAL_MEDIA_TYPE_DOC   SIGNAL_MEDIA_TYPE = 3
	SIGNAL_MEDIA_TYPE_FILE  SIGNAL_MEDIA_TYPE = 4
)

// Enum value maps for SIGNAL_MEDIA_TYPE.
var (
	SIGNAL_MEDIA_TYPE_name = map[int32]string{
		0: "VIDEO",
		1: "AUDIO",
		2: "IMAGE",
		3: "DOC",
		4: "FILE",
	}
	SIGNAL_MEDIA_TYPE_value = map[string]int32{
		"VIDEO": 0,
		"AUDIO": 1,
		"IMAGE": 2,
		"DOC":   3,
		"FILE":  4,
	}
)

func (x SIGNAL_MEDIA_TYPE) Enum() *SIGNAL_MEDIA_TYPE {
	p := new(SIGNAL_MEDIA_TYPE)
	*p = x
	return p
}

func (x SIGNAL_MEDIA_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_MEDIA_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[3].Descriptor()
}

func (SIGNAL_MEDIA_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[3]
}

func (x SIGNAL_MEDIA_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_MEDIA_TYPE.Descriptor instead.
func (SIGNAL_MEDIA_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{3}
}

type SIGNAL_MEDIA_FILE_STATUS int32

const (
	SIGNAL_MEDIA_FILE_STATUS_SENDING         SIGNAL_MEDIA_FILE_STATUS = 0
	SIGNAL_MEDIA_FILE_STATUS_SEND_FAILED     SIGNAL_MEDIA_FILE_STATUS = 1
	SIGNAL_MEDIA_FILE_STATUS_SENT            SIGNAL_MEDIA_FILE_STATUS = 2
	SIGNAL_MEDIA_FILE_STATUS_DOWNLOADING     SIGNAL_MEDIA_FILE_STATUS = 3
	SIGNAL_MEDIA_FILE_STATUS_DOWNLOAD_FAILED SIGNAL_MEDIA_FILE_STATUS = 4
	SIGNAL_MEDIA_FILE_STATUS_DOWNLOADED      SIGNAL_MEDIA_FILE_STATUS = 5
)

// Enum value maps for SIGNAL_MEDIA_FILE_STATUS.
var (
	SIGNAL_MEDIA_FILE_STATUS_name = map[int32]string{
		0: "SENDING",
		1: "SEND_FAILED",
		2: "SENT",
		3: "DOWNLOADING",
		4: "DOWNLOAD_FAILED",
		5: "DOWNLOADED",
	}
	SIGNAL_MEDIA_FILE_STATUS_value = map[string]int32{
		"SENDING":         0,
		"SEND_FAILED":     1,
		"SENT":            2,
		"DOWNLOADING":     3,
		"DOWNLOAD_FAILED": 4,
		"DOWNLOADED":      5,
	}
)

func (x SIGNAL_MEDIA_FILE_STATUS) Enum() *SIGNAL_MEDIA_FILE_STATUS {
	p := new(SIGNAL_MEDIA_FILE_STATUS)
	*p = x
	return p
}

func (x SIGNAL_MEDIA_FILE_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_MEDIA_FILE_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[4].Descriptor()
}

func (SIGNAL_MEDIA_FILE_STATUS) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[4]
}

func (x SIGNAL_MEDIA_FILE_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_MEDIA_FILE_STATUS.Descriptor instead.
func (SIGNAL_MEDIA_FILE_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{4}
}

// -------------------SIGNAL_SEENSTATE_MSG--------------------------------//
type SIGNAL_SEENSTATE_MSG_TYPE int32

const (
	SIGNAL_SEENSTATE_MSG_TYPE_DELIVER SIGNAL_SEENSTATE_MSG_TYPE = 0
	SIGNAL_SEENSTATE_MSG_TYPE_SEEN    SIGNAL_SEENSTATE_MSG_TYPE = 1
)

// Enum value maps for SIGNAL_SEENSTATE_MSG_TYPE.
var (
	SIGNAL_SEENSTATE_MSG_TYPE_name = map[int32]string{
		0: "DELIVER",
		1: "SEEN",
	}
	SIGNAL_SEENSTATE_MSG_TYPE_value = map[string]int32{
		"DELIVER": 0,
		"SEEN":    1,
	}
)

func (x SIGNAL_SEENSTATE_MSG_TYPE) Enum() *SIGNAL_SEENSTATE_MSG_TYPE {
	p := new(SIGNAL_SEENSTATE_MSG_TYPE)
	*p = x
	return p
}

func (x SIGNAL_SEENSTATE_MSG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_SEENSTATE_MSG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[5].Descriptor()
}

func (SIGNAL_SEENSTATE_MSG_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[5]
}

func (x SIGNAL_SEENSTATE_MSG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_SEENSTATE_MSG_TYPE.Descriptor instead.
func (SIGNAL_SEENSTATE_MSG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{5}
}

// -------------------SIGNAL_GROUP_THREAD_NOTIFICATION_MSG--------------------------------//
type SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE int32

const (
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_CREATED       SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 0
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_LEAVE         SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 1
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_ADD_USERS     SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 2
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_REMOVE_USERS  SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 3
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_PROMOTE_ADMIN SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 4
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_REVOKE_ADMIN  SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 5
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_CHANGE_NAME   SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE = 6
)

// Enum value maps for SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE.
var (
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_name = map[int32]string{
		0: "GROUP_THREAD_CREATED",
		1: "GROUP_THREAD_LEAVE",
		2: "GROUP_THREAD_ADD_USERS",
		3: "GROUP_THREAD_REMOVE_USERS",
		4: "GROUP_THREAD_PROMOTE_ADMIN",
		5: "GROUP_THREAD_REVOKE_ADMIN",
		6: "GROUP_THREAD_CHANGE_NAME",
	}
	SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_value = map[string]int32{
		"GROUP_THREAD_CREATED":       0,
		"GROUP_THREAD_LEAVE":         1,
		"GROUP_THREAD_ADD_USERS":     2,
		"GROUP_THREAD_REMOVE_USERS":  3,
		"GROUP_THREAD_PROMOTE_ADMIN": 4,
		"GROUP_THREAD_REVOKE_ADMIN":  5,
		"GROUP_THREAD_CHANGE_NAME":   6,
	}
)

func (x SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) Enum() *SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE {
	p := new(SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE)
	*p = x
	return p
}

func (x SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[6].Descriptor()
}

func (SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[6]
}

func (x SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE.Descriptor instead.
func (SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{6}
}

// -------------------SIGNAL_EVENT_MSG--------------------------------//
type SIGNAL_EVENT_MSG_TYPE int32

const (
	SIGNAL_EVENT_MSG_TYPE_UPDATE_CONTACT_OTT SIGNAL_EVENT_MSG_TYPE = 0
	SIGNAL_EVENT_MSG_TYPE_MSG_DELETE         SIGNAL_EVENT_MSG_TYPE = 1
	SIGNAL_EVENT_MSG_TYPE_THREAD_CLEAR_MSG   SIGNAL_EVENT_MSG_TYPE = 2
	SIGNAL_EVENT_MSG_TYPE_THREAD_DELETED     SIGNAL_EVENT_MSG_TYPE = 3
)

// Enum value maps for SIGNAL_EVENT_MSG_TYPE.
var (
	SIGNAL_EVENT_MSG_TYPE_name = map[int32]string{
		0: "UPDATE_CONTACT_OTT",
		1: "MSG_DELETE",
		2: "THREAD_CLEAR_MSG",
		3: "THREAD_DELETED",
	}
	SIGNAL_EVENT_MSG_TYPE_value = map[string]int32{
		"UPDATE_CONTACT_OTT": 0,
		"MSG_DELETE":         1,
		"THREAD_CLEAR_MSG":   2,
		"THREAD_DELETED":     3,
	}
)

func (x SIGNAL_EVENT_MSG_TYPE) Enum() *SIGNAL_EVENT_MSG_TYPE {
	p := new(SIGNAL_EVENT_MSG_TYPE)
	*p = x
	return p
}

func (x SIGNAL_EVENT_MSG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SIGNAL_EVENT_MSG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cwm_cwmSignalMsg_proto_enumTypes[7].Descriptor()
}

func (SIGNAL_EVENT_MSG_TYPE) Type() protoreflect.EnumType {
	return &file_cwm_cwmSignalMsg_proto_enumTypes[7]
}

func (x SIGNAL_EVENT_MSG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SIGNAL_EVENT_MSG_TYPE.Descriptor instead.
func (SIGNAL_EVENT_MSG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{7}
}

type SignalMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId      string             `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	ThreadType SIGNAL_THREAD_TYPE `protobuf:"varint,2,opt,name=threadType,proto3,enum=cwmSignalMsgPb.SIGNAL_THREAD_TYPE" json:"threadType,omitempty"`
	ImType     SIGNAL_IM_TYPE     `protobuf:"varint,3,opt,name=imType,proto3,enum=cwmSignalMsgPb.SIGNAL_IM_TYPE" json:"imType,omitempty"`
	ThreadId   string             `protobuf:"bytes,4,opt,name=threadId,proto3" json:"threadId,omitempty"` // SOLO: threadId = phoneA_phoneB, GROUP: GroupId
	ReplyMsgId string             `protobuf:"bytes,5,opt,name=replyMsgId,proto3" json:"replyMsgId,omitempty"`
	MsgDate    int64              `protobuf:"varint,6,opt,name=msgDate,proto3" json:"msgDate,omitempty"`
	ServerDate int64              `protobuf:"varint,7,opt,name=serverDate,proto3" json:"serverDate,omitempty"` //msg Date on server
	Checksum   string             `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Seenby     []string           `protobuf:"bytes,9,rep,name=seenby,proto3" json:"seenby,omitempty"`
	Data       []byte             `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignalMessage) Reset() {
	*x = SignalMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalMessage) ProtoMessage() {}

func (x *SignalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalMessage.ProtoReflect.Descriptor instead.
func (*SignalMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{0}
}

func (x *SignalMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *SignalMessage) GetThreadType() SIGNAL_THREAD_TYPE {
	if x != nil {
		return x.ThreadType
	}
	return SIGNAL_THREAD_TYPE_SOLO
}

func (x *SignalMessage) GetImType() SIGNAL_IM_TYPE {
	if x != nil {
		return x.ImType
	}
	return SIGNAL_IM_TYPE_TYPING
}

func (x *SignalMessage) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalMessage) GetReplyMsgId() string {
	if x != nil {
		return x.ReplyMsgId
	}
	return ""
}

func (x *SignalMessage) GetMsgDate() int64 {
	if x != nil {
		return x.MsgDate
	}
	return 0
}

func (x *SignalMessage) GetServerDate() int64 {
	if x != nil {
		return x.ServerDate
	}
	return 0
}

func (x *SignalMessage) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *SignalMessage) GetSeenby() []string {
	if x != nil {
		return x.Seenby
	}
	return nil
}

func (x *SignalMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SignalTypingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type SIGNAL_TYPING_MSG_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=cwmSignalMsgPb.SIGNAL_TYPING_MSG_TYPE" json:"type,omitempty"`
}

func (x *SignalTypingMessage) Reset() {
	*x = SignalTypingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTypingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTypingMessage) ProtoMessage() {}

func (x *SignalTypingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTypingMessage.ProtoReflect.Descriptor instead.
func (*SignalTypingMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{1}
}

func (x *SignalTypingMessage) GetType() SIGNAL_TYPING_MSG_TYPE {
	if x != nil {
		return x.Type
	}
	return SIGNAL_TYPING_MSG_TYPE_M_TYPING
}

// -------------------SIGNAL_FORWARD_MSG--------------------------------//
type SignalForwardMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From          string             `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	FromFirstName string             `protobuf:"bytes,2,opt,name=fromFirstName,proto3" json:"fromFirstName,omitempty"`
	FromLastName  string             `protobuf:"bytes,3,opt,name=fromLastName,proto3" json:"fromLastName,omitempty"`
	FromUserName  string             `protobuf:"bytes,4,opt,name=fromUserName,proto3" json:"fromUserName,omitempty"`
	ThreadId      string             `protobuf:"bytes,5,opt,name=threadId,proto3" json:"threadId,omitempty"`
	ThreadType    SIGNAL_THREAD_TYPE `protobuf:"varint,6,opt,name=threadType,proto3,enum=cwmSignalMsgPb.SIGNAL_THREAD_TYPE" json:"threadType,omitempty"`
	ImType        SIGNAL_IM_TYPE     `protobuf:"varint,7,opt,name=imType,proto3,enum=cwmSignalMsgPb.SIGNAL_IM_TYPE" json:"imType,omitempty"`
	Data          []byte             `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignalForwardMessage) Reset() {
	*x = SignalForwardMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalForwardMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalForwardMessage) ProtoMessage() {}

func (x *SignalForwardMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalForwardMessage.ProtoReflect.Descriptor instead.
func (*SignalForwardMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{2}
}

func (x *SignalForwardMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SignalForwardMessage) GetFromFirstName() string {
	if x != nil {
		return x.FromFirstName
	}
	return ""
}

func (x *SignalForwardMessage) GetFromLastName() string {
	if x != nil {
		return x.FromLastName
	}
	return ""
}

func (x *SignalForwardMessage) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *SignalForwardMessage) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalForwardMessage) GetThreadType() SIGNAL_THREAD_TYPE {
	if x != nil {
		return x.ThreadType
	}
	return SIGNAL_THREAD_TYPE_SOLO
}

func (x *SignalForwardMessage) GetImType() SIGNAL_IM_TYPE {
	if x != nil {
		return x.ImType
	}
	return SIGNAL_IM_TYPE_TYPING
}

func (x *SignalForwardMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------SIGNAL_URL_MSG--------------------------------//
type SignalURLMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	UrlTitle       string `protobuf:"bytes,2,opt,name=urlTitle,proto3" json:"urlTitle,omitempty"`
	UrlDescription string `protobuf:"bytes,3,opt,name=urlDescription,proto3" json:"urlDescription,omitempty"`
	UrlThumbnail   string `protobuf:"bytes,4,opt,name=urlThumbnail,proto3" json:"urlThumbnail,omitempty"`
	Data           []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignalURLMessage) Reset() {
	*x = SignalURLMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalURLMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalURLMessage) ProtoMessage() {}

func (x *SignalURLMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalURLMessage.ProtoReflect.Descriptor instead.
func (*SignalURLMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{3}
}

func (x *SignalURLMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SignalURLMessage) GetUrlTitle() string {
	if x != nil {
		return x.UrlTitle
	}
	return ""
}

func (x *SignalURLMessage) GetUrlDescription() string {
	if x != nil {
		return x.UrlDescription
	}
	return ""
}

func (x *SignalURLMessage) GetUrlThumbnail() string {
	if x != nil {
		return x.UrlThumbnail
	}
	return ""
}

func (x *SignalURLMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MultimediaFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId    string            `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	FileName  string            `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize  int64             `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	MediaType SIGNAL_MEDIA_TYPE `protobuf:"varint,4,opt,name=mediaType,proto3,enum=cwmSignalMsgPb.SIGNAL_MEDIA_TYPE" json:"mediaType,omitempty"`
	MimeType  string            `protobuf:"bytes,5,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Checksum  string            `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// on local client side
	FileUri    string                   `protobuf:"bytes,7,opt,name=fileUri,proto3" json:"fileUri,omitempty"`
	FileStatus SIGNAL_MEDIA_FILE_STATUS `protobuf:"varint,8,opt,name=fileStatus,proto3,enum=cwmSignalMsgPb.SIGNAL_MEDIA_FILE_STATUS" json:"fileStatus,omitempty"`
}

func (x *MultimediaFileInfo) Reset() {
	*x = MultimediaFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultimediaFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultimediaFileInfo) ProtoMessage() {}

func (x *MultimediaFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultimediaFileInfo.ProtoReflect.Descriptor instead.
func (*MultimediaFileInfo) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{4}
}

func (x *MultimediaFileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *MultimediaFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MultimediaFileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MultimediaFileInfo) GetMediaType() SIGNAL_MEDIA_TYPE {
	if x != nil {
		return x.MediaType
	}
	return SIGNAL_MEDIA_TYPE_VIDEO
}

func (x *MultimediaFileInfo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MultimediaFileInfo) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *MultimediaFileInfo) GetFileUri() string {
	if x != nil {
		return x.FileUri
	}
	return ""
}

func (x *MultimediaFileInfo) GetFileStatus() SIGNAL_MEDIA_FILE_STATUS {
	if x != nil {
		return x.FileStatus
	}
	return SIGNAL_MEDIA_FILE_STATUS_SENDING
}

type SignalMultimediaMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultimediaFileInfos []*MultimediaFileInfo `protobuf:"bytes,1,rep,name=multimediaFileInfos,proto3" json:"multimediaFileInfos,omitempty"`
}

func (x *SignalMultimediaMessage) Reset() {
	*x = SignalMultimediaMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalMultimediaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalMultimediaMessage) ProtoMessage() {}

func (x *SignalMultimediaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalMultimediaMessage.ProtoReflect.Descriptor instead.
func (*SignalMultimediaMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{5}
}

func (x *SignalMultimediaMessage) GetMultimediaFileInfos() []*MultimediaFileInfo {
	if x != nil {
		return x.MultimediaFileInfos
	}
	return nil
}

type SignalSeenStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeenStateType SIGNAL_SEENSTATE_MSG_TYPE `protobuf:"varint,1,opt,name=seenStateType,proto3,enum=cwmSignalMsgPb.SIGNAL_SEENSTATE_MSG_TYPE" json:"seenStateType,omitempty"`
	MsgId         []string                  `protobuf:"bytes,2,rep,name=msgId,proto3" json:"msgId,omitempty"`
}

func (x *SignalSeenStateMessage) Reset() {
	*x = SignalSeenStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalSeenStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalSeenStateMessage) ProtoMessage() {}

func (x *SignalSeenStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalSeenStateMessage.ProtoReflect.Descriptor instead.
func (*SignalSeenStateMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{6}
}

func (x *SignalSeenStateMessage) GetSeenStateType() SIGNAL_SEENSTATE_MSG_TYPE {
	if x != nil {
		return x.SeenStateType
	}
	return SIGNAL_SEENSTATE_MSG_TYPE_DELIVER
}

func (x *SignalSeenStateMessage) GetMsgId() []string {
	if x != nil {
		return x.MsgId
	}
	return nil
}

type SignalGroupThreadNotificationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationType SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE `protobuf:"varint,1,opt,name=notificationType,proto3,enum=cwmSignalMsgPb.SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE" json:"notificationType,omitempty"`
	ThreadId         string                                    `protobuf:"bytes,2,opt,name=threadId,proto3" json:"threadId,omitempty"`
	Executor         string                                    `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
	TargetMembers    []string                                  `protobuf:"bytes,4,rep,name=targetMembers,proto3" json:"targetMembers,omitempty"`
	// group info
	GroupName    string   `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Creator      string   `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	Participants []string `protobuf:"bytes,7,rep,name=participants,proto3" json:"participants,omitempty"`
	Admins       []string `protobuf:"bytes,8,rep,name=admins,proto3" json:"admins,omitempty"`
	LastModified int64    `protobuf:"varint,9,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
}

func (x *SignalGroupThreadNotificationMessage) Reset() {
	*x = SignalGroupThreadNotificationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalGroupThreadNotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalGroupThreadNotificationMessage) ProtoMessage() {}

func (x *SignalGroupThreadNotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalGroupThreadNotificationMessage.ProtoReflect.Descriptor instead.
func (*SignalGroupThreadNotificationMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{7}
}

func (x *SignalGroupThreadNotificationMessage) GetNotificationType() SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE {
	if x != nil {
		return x.NotificationType
	}
	return SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE_GROUP_THREAD_CREATED
}

func (x *SignalGroupThreadNotificationMessage) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalGroupThreadNotificationMessage) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *SignalGroupThreadNotificationMessage) GetTargetMembers() []string {
	if x != nil {
		return x.TargetMembers
	}
	return nil
}

func (x *SignalGroupThreadNotificationMessage) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SignalGroupThreadNotificationMessage) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *SignalGroupThreadNotificationMessage) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *SignalGroupThreadNotificationMessage) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *SignalGroupThreadNotificationMessage) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

type SignalEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType SIGNAL_EVENT_MSG_TYPE `protobuf:"varint,1,opt,name=eventType,proto3,enum=cwmSignalMsgPb.SIGNAL_EVENT_MSG_TYPE" json:"eventType,omitempty"`
	Data      []byte                `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignalEventMessage) Reset() {
	*x = SignalEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEventMessage) ProtoMessage() {}

func (x *SignalEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEventMessage.ProtoReflect.Descriptor instead.
func (*SignalEventMessage) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{8}
}

func (x *SignalEventMessage) GetEventType() SIGNAL_EVENT_MSG_TYPE {
	if x != nil {
		return x.EventType
	}
	return SIGNAL_EVENT_MSG_TYPE_UPDATE_CONTACT_OTT
}

func (x *SignalEventMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SignalEventMessageUpdateContactOTT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneFull  string `protobuf:"bytes,1,opt,name=phoneFull,proto3" json:"phoneFull,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Username   string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	UserAvatar string `protobuf:"bytes,4,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	FirstName  string `protobuf:"bytes,5,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName   string `protobuf:"bytes,6,opt,name=lastName,proto3" json:"lastName,omitempty"`
}

func (x *SignalEventMessageUpdateContactOTT) Reset() {
	*x = SignalEventMessageUpdateContactOTT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEventMessageUpdateContactOTT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEventMessageUpdateContactOTT) ProtoMessage() {}

func (x *SignalEventMessageUpdateContactOTT) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEventMessageUpdateContactOTT.ProtoReflect.Descriptor instead.
func (*SignalEventMessageUpdateContactOTT) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{9}
}

func (x *SignalEventMessageUpdateContactOTT) GetPhoneFull() string {
	if x != nil {
		return x.PhoneFull
	}
	return ""
}

func (x *SignalEventMessageUpdateContactOTT) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SignalEventMessageUpdateContactOTT) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignalEventMessageUpdateContactOTT) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *SignalEventMessageUpdateContactOTT) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SignalEventMessageUpdateContactOTT) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type SignalEventMessageMsgDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId            string   `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	MsgIds              []string `protobuf:"bytes,2,rep,name=msgIds,proto3" json:"msgIds,omitempty"`
	DeleteForAllMembers bool     `protobuf:"varint,3,opt,name=deleteForAllMembers,proto3" json:"deleteForAllMembers,omitempty"`
}

func (x *SignalEventMessageMsgDelete) Reset() {
	*x = SignalEventMessageMsgDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEventMessageMsgDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEventMessageMsgDelete) ProtoMessage() {}

func (x *SignalEventMessageMsgDelete) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEventMessageMsgDelete.ProtoReflect.Descriptor instead.
func (*SignalEventMessageMsgDelete) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{10}
}

func (x *SignalEventMessageMsgDelete) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalEventMessageMsgDelete) GetMsgIds() []string {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

func (x *SignalEventMessageMsgDelete) GetDeleteForAllMembers() bool {
	if x != nil {
		return x.DeleteForAllMembers
	}
	return false
}

type SignalEventMessageThreadClearMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId            string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	DeleteForAllMembers bool   `protobuf:"varint,2,opt,name=deleteForAllMembers,proto3" json:"deleteForAllMembers,omitempty"`
}

func (x *SignalEventMessageThreadClearMsg) Reset() {
	*x = SignalEventMessageThreadClearMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEventMessageThreadClearMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEventMessageThreadClearMsg) ProtoMessage() {}

func (x *SignalEventMessageThreadClearMsg) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEventMessageThreadClearMsg.ProtoReflect.Descriptor instead.
func (*SignalEventMessageThreadClearMsg) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{11}
}

func (x *SignalEventMessageThreadClearMsg) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalEventMessageThreadClearMsg) GetDeleteForAllMembers() bool {
	if x != nil {
		return x.DeleteForAllMembers
	}
	return false
}

type SignalEventMessageThreadDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId            string `protobuf:"bytes,1,opt,name=threadId,proto3" json:"threadId,omitempty"`
	DeleteForAllMembers bool   `protobuf:"varint,2,opt,name=deleteForAllMembers,proto3" json:"deleteForAllMembers,omitempty"`
}

func (x *SignalEventMessageThreadDeleted) Reset() {
	*x = SignalEventMessageThreadDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwm_cwmSignalMsg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalEventMessageThreadDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEventMessageThreadDeleted) ProtoMessage() {}

func (x *SignalEventMessageThreadDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_cwm_cwmSignalMsg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEventMessageThreadDeleted.ProtoReflect.Descriptor instead.
func (*SignalEventMessageThreadDeleted) Descriptor() ([]byte, []int) {
	return file_cwm_cwmSignalMsg_proto_rawDescGZIP(), []int{12}
}

func (x *SignalEventMessageThreadDeleted) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *SignalEventMessageThreadDeleted) GetDeleteForAllMembers() bool {
	if x != nil {
		return x.DeleteForAllMembers
	}
	return false
}

var File_cwm_cwmSignalMsg_proto protoreflect.FileDescriptor

var file_cwm_cwmSignalMsg_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x77, 0x6d, 0x2f, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d,
	0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x22, 0xdf, 0x02, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x48, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x52, 0x06, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x65, 0x6e, 0x62, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x65, 0x6e, 0x62, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x13, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62,
	0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4d,
	0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc4, 0x02,
	0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72,
	0x6f, 0x6d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0a, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x06, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55,
	0x52, 0x4c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x72, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x72, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x72, 0x6c, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x72, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x72, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x72, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x02, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3f,
	0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67,
	0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x48, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6f, 0x0a, 0x17, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d,
	0x73, 0x67, 0x50, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x7f, 0x0a, 0x16,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x73, 0x65, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x45, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0d, 0x73, 0x65, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x83, 0x03,
	0x0a, 0x24, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x39, 0x2e, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50,
	0x62, 0x2e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54,
	0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x22, 0x6d, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63,
	0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x2e, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xd0, 0x01, 0x0a, 0x22, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4f, 0x54, 0x54, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x70, 0x0a, 0x20, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a,
	0x1f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2a, 0x29,
	0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4f, 0x4c, 0x4f, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x2a, 0x9e, 0x01, 0x0a, 0x0e, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0a, 0x0a, 0x06,
	0x54, 0x59, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x45, 0x4e,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4d, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x43, 0x54, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4d, 0x4f, 0x54, 0x49, 0x43,
	0x4f, 0x4e, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x07, 0x12, 0x0e, 0x0a,
	0x0a, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x10, 0x08, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x09, 0x2a, 0x36, 0x0a, 0x16, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x5f, 0x55, 0x4e, 0x54, 0x59, 0x50, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x2a, 0x47, 0x0a, 0x11, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4f, 0x43, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0x78, 0x0a, 0x18, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41,
	0x44, 0x45, 0x44, 0x10, 0x05, 0x2a, 0x32, 0x0a, 0x19, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x53, 0x45, 0x45, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x45, 0x45, 0x4e, 0x10, 0x01, 0x2a, 0xf5, 0x01, 0x0a, 0x29, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41,
	0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41,
	0x44, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x53, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54,
	0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x53, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x48, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x06, 0x2a, 0x69, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x4f, 0x54, 0x54,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x53, 0x47, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x43, 0x4c, 0x45,
	0x41, 0x52, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x48, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x21, 0x5a, 0x1f,
	0x73, 0x6f, 0x6c, 0x2e, 0x67, 0x6f, 0x2f, 0x63, 0x77, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x77, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x50, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cwm_cwmSignalMsg_proto_rawDescOnce sync.Once
	file_cwm_cwmSignalMsg_proto_rawDescData = file_cwm_cwmSignalMsg_proto_rawDesc
)

func file_cwm_cwmSignalMsg_proto_rawDescGZIP() []byte {
	file_cwm_cwmSignalMsg_proto_rawDescOnce.Do(func() {
		file_cwm_cwmSignalMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_cwm_cwmSignalMsg_proto_rawDescData)
	})
	return file_cwm_cwmSignalMsg_proto_rawDescData
}

var file_cwm_cwmSignalMsg_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_cwm_cwmSignalMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_cwm_cwmSignalMsg_proto_goTypes = []interface{}{
	(SIGNAL_THREAD_TYPE)(0),                        // 0: cwmSignalMsgPb.SIGNAL_THREAD_TYPE
	(SIGNAL_IM_TYPE)(0),                            // 1: cwmSignalMsgPb.SIGNAL_IM_TYPE
	(SIGNAL_TYPING_MSG_TYPE)(0),                    // 2: cwmSignalMsgPb.SIGNAL_TYPING_MSG_TYPE
	(SIGNAL_MEDIA_TYPE)(0),                         // 3: cwmSignalMsgPb.SIGNAL_MEDIA_TYPE
	(SIGNAL_MEDIA_FILE_STATUS)(0),                  // 4: cwmSignalMsgPb.SIGNAL_MEDIA_FILE_STATUS
	(SIGNAL_SEENSTATE_MSG_TYPE)(0),                 // 5: cwmSignalMsgPb.SIGNAL_SEENSTATE_MSG_TYPE
	(SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE)(0), // 6: cwmSignalMsgPb.SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE
	(SIGNAL_EVENT_MSG_TYPE)(0),                     // 7: cwmSignalMsgPb.SIGNAL_EVENT_MSG_TYPE
	(*SignalMessage)(nil),                          // 8: cwmSignalMsgPb.SignalMessage
	(*SignalTypingMessage)(nil),                    // 9: cwmSignalMsgPb.SignalTypingMessage
	(*SignalForwardMessage)(nil),                   // 10: cwmSignalMsgPb.SignalForwardMessage
	(*SignalURLMessage)(nil),                       // 11: cwmSignalMsgPb.SignalURLMessage
	(*MultimediaFileInfo)(nil),                     // 12: cwmSignalMsgPb.MultimediaFileInfo
	(*SignalMultimediaMessage)(nil),                // 13: cwmSignalMsgPb.SignalMultimediaMessage
	(*SignalSeenStateMessage)(nil),                 // 14: cwmSignalMsgPb.SignalSeenStateMessage
	(*SignalGroupThreadNotificationMessage)(nil),   // 15: cwmSignalMsgPb.SignalGroupThreadNotificationMessage
	(*SignalEventMessage)(nil),                     // 16: cwmSignalMsgPb.SignalEventMessage
	(*SignalEventMessageUpdateContactOTT)(nil),     // 17: cwmSignalMsgPb.SignalEventMessageUpdateContactOTT
	(*SignalEventMessageMsgDelete)(nil),            // 18: cwmSignalMsgPb.SignalEventMessageMsgDelete
	(*SignalEventMessageThreadClearMsg)(nil),       // 19: cwmSignalMsgPb.SignalEventMessageThreadClearMsg
	(*SignalEventMessageThreadDeleted)(nil),        // 20: cwmSignalMsgPb.SignalEventMessageThreadDeleted
}
var file_cwm_cwmSignalMsg_proto_depIdxs = []int32{
	0,  // 0: cwmSignalMsgPb.SignalMessage.threadType:type_name -> cwmSignalMsgPb.SIGNAL_THREAD_TYPE
	1,  // 1: cwmSignalMsgPb.SignalMessage.imType:type_name -> cwmSignalMsgPb.SIGNAL_IM_TYPE
	2,  // 2: cwmSignalMsgPb.SignalTypingMessage.type:type_name -> cwmSignalMsgPb.SIGNAL_TYPING_MSG_TYPE
	0,  // 3: cwmSignalMsgPb.SignalForwardMessage.threadType:type_name -> cwmSignalMsgPb.SIGNAL_THREAD_TYPE
	1,  // 4: cwmSignalMsgPb.SignalForwardMessage.imType:type_name -> cwmSignalMsgPb.SIGNAL_IM_TYPE
	3,  // 5: cwmSignalMsgPb.MultimediaFileInfo.mediaType:type_name -> cwmSignalMsgPb.SIGNAL_MEDIA_TYPE
	4,  // 6: cwmSignalMsgPb.MultimediaFileInfo.fileStatus:type_name -> cwmSignalMsgPb.SIGNAL_MEDIA_FILE_STATUS
	12, // 7: cwmSignalMsgPb.SignalMultimediaMessage.multimediaFileInfos:type_name -> cwmSignalMsgPb.MultimediaFileInfo
	5,  // 8: cwmSignalMsgPb.SignalSeenStateMessage.seenStateType:type_name -> cwmSignalMsgPb.SIGNAL_SEENSTATE_MSG_TYPE
	6,  // 9: cwmSignalMsgPb.SignalGroupThreadNotificationMessage.notificationType:type_name -> cwmSignalMsgPb.SIGNAL_GROUP_THREAD_NOTIFICATION_MSG_TYPE
	7,  // 10: cwmSignalMsgPb.SignalEventMessage.eventType:type_name -> cwmSignalMsgPb.SIGNAL_EVENT_MSG_TYPE
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_cwm_cwmSignalMsg_proto_init() }
func file_cwm_cwmSignalMsg_proto_init() {
	if File_cwm_cwmSignalMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cwm_cwmSignalMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalTypingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalForwardMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalURLMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultimediaFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalMultimediaMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalSeenStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalGroupThreadNotificationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEventMessageUpdateContactOTT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEventMessageMsgDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEventMessageThreadClearMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwm_cwmSignalMsg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalEventMessageThreadDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cwm_cwmSignalMsg_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cwm_cwmSignalMsg_proto_goTypes,
		DependencyIndexes: file_cwm_cwmSignalMsg_proto_depIdxs,
		EnumInfos:         file_cwm_cwmSignalMsg_proto_enumTypes,
		MessageInfos:      file_cwm_cwmSignalMsg_proto_msgTypes,
	}.Build()
	File_cwm_cwmSignalMsg_proto = out.File
	file_cwm_cwmSignalMsg_proto_rawDesc = nil
	file_cwm_cwmSignalMsg_proto_goTypes = nil
	file_cwm_cwmSignalMsg_proto_depIdxs = nil
}
